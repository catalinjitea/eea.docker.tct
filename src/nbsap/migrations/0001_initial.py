# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-21 12:20
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AichiGoal',
            fields=[
                ('code', models.CharField(max_length=1, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='AichiIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512, verbose_name='Operational Indicator')),
                ('question', models.CharField(max_length=255, verbose_name='Communication Question')),
                ('head_indicator', models.CharField(max_length=255, verbose_name='Headline Indicator')),
                ('sub_indicator', models.CharField(max_length=255, verbose_name='Indicator Sub-topics')),
                ('classification', models.CharField(max_length=255, verbose_name='Operational Classification')),
                ('status', models.TextField(blank=True, verbose_name='Status of development')),
                ('sensitivity', models.CharField(blank=True, choices=[(b'low', b'Low'), (b'med', b'Medium'), (b'hig', b'High')], max_length=3, verbose_name='Sensitivity (can it be used to make assessment by 2015?)')),
                ('validity', models.CharField(blank=True, choices=[(b'low', b'Low'), (b'med', b'Medium'), (b'hig', b'High')], max_length=3, verbose_name='Scientific Validity')),
                ('ease_of_communication', models.CharField(blank=True, choices=[(b'low', b'Low'), (b'med', b'Medium'), (b'hig', b'High')], max_length=3, verbose_name='How easy can it be communicated?')),
                ('sources', models.CharField(blank=True, max_length=255, verbose_name='Data Sources')),
                ('requirements', models.TextField(blank=True, verbose_name='Requirements')),
                ('measurer', models.TextField(blank=True, verbose_name="Who's responsible for measuring?")),
                ('conventions', models.CharField(blank=True, max_length=255, verbose_name='Other conventions/processes using indicator')),
            ],
        ),
        migrations.CreateModel(
            name='AichiTarget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16)),
                ('indicators', models.ManyToManyField(blank=True, related_name='relevant_target', to='nbsap.AichiIndicator')),
                ('other_indicators', models.ManyToManyField(blank=True, related_name='other_targets', to='nbsap.AichiIndicator')),
            ],
            options={
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='EuAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='nbsap.EuAction')),
            ],
            options={
                'verbose_name_plural': 'EU actions',
            },
        ),
        migrations.CreateModel(
            name='EuAichiStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aichi_targets', models.ManyToManyField(related_name='eu_aichi_strategy', to='nbsap.AichiTarget', verbose_name=b'Aichi targets')),
            ],
            options={
                'ordering': ['eu_target'],
                'verbose_name_plural': ' Mappings: EU targets to Aichi',
            },
        ),
        migrations.CreateModel(
            name='EuIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('indicator_type', models.CharField(blank=True, choices=[(b'sebi', b'SEBI'), (b'csi', b'CSI'), (b'aei', b'AEI')], max_length=4, verbose_name='Indicator type')),
                ('parent', models.ManyToManyField(blank=True, related_name='parents', to='nbsap.EuIndicator')),
            ],
            options={
                'ordering': ['code'],
                'verbose_name_plural': 'EU indicators',
            },
        ),
        migrations.CreateModel(
            name='EuIndicatorToAichiStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aichi_targets', models.ManyToManyField(related_name='eu_indicator_aichi_strategy', to='nbsap.AichiTarget', verbose_name=b'Aichi targets')),
                ('eu_indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eu_indicator_aichi_strategy', to='nbsap.EuIndicator', verbose_name=b'EU Biodiversity Indicator')),
                ('other_aichi_targets', models.ManyToManyField(blank=True, related_name='eu_indicator_other_aichi_strategy', to='nbsap.AichiTarget', verbose_name=b'Other Aichi targets')),
            ],
            options={
                'ordering': ['eu_indicator'],
                'verbose_name_plural': 'Mappings: EU indicators to Aichi',
            },
        ),
        migrations.CreateModel(
            name='EuTarget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16)),
                ('actions', models.ManyToManyField(blank=True, related_name='target', to='nbsap.EuAction')),
                ('indicators', models.ManyToManyField(blank=True, related_name='targets', to='nbsap.EuIndicator')),
                ('other_indicators', models.ManyToManyField(blank=True, related_name='other_targets', to='nbsap.EuIndicator')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='nbsap.EuTarget')),
            ],
            options={
                'ordering': ['code'],
                'verbose_name_plural': 'EU targets',
            },
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='NationalAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='NationalIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=25, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('subindicators', models.ManyToManyField(blank=True, related_name='parents', to='nbsap.NationalIndicator')),
            ],
            options={
                'ordering': ['code'],
                'verbose_name_plural': 'National indicators',
            },
        ),
        migrations.CreateModel(
            name='NationalObjective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=16, unique=True)),
                ('actions', models.ManyToManyField(blank=True, related_name='objective', to='nbsap.NationalAction')),
                ('nat_indicators', models.ManyToManyField(blank=True, related_name='nat_objectives', to='nbsap.NationalIndicator')),
                ('other_nat_indicators', models.ManyToManyField(blank=True, related_name='other_nat_objectives', to='nbsap.NationalIndicator')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='nbsap.NationalObjective')),
            ],
        ),
        migrations.CreateModel(
            name='NationalStrategy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='objective_national_strategy', to='nbsap.NationalObjective', verbose_name=b'National Objective')),
                ('other_targets', models.ManyToManyField(blank=True, related_name='other_targets_national_strategy', to='nbsap.AichiTarget', verbose_name=b'Other AICHI targets')),
                ('relevant_targets', models.ManyToManyField(blank=True, related_name='relevant_targets_national_strategy', to='nbsap.AichiTarget', verbose_name=b'Relevant AICHI Targets')),
            ],
            options={
                'verbose_name_plural': ' Mappings: National strategy to AICHI&EU',
            },
        ),
        migrations.CreateModel(
            name='NavbarLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=12)),
                ('title', models.CharField(blank=True, max_length=64)),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='NbsapPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handle', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Scale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
            ],
        ),
        migrations.AddField(
            model_name='euaichistrategy',
            name='eu_target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eu_aichi_strategy', to='nbsap.EuTarget', verbose_name=b'EU Biodiversity Target'),
        ),
        migrations.AddField(
            model_name='euaichistrategy',
            name='other_aichi_targets',
            field=models.ManyToManyField(blank=True, related_name='eu_other_aichi_strategy', to='nbsap.AichiTarget', verbose_name=b'Other Aichi targets'),
        ),
        migrations.AddField(
            model_name='aichiindicator',
            name='links',
            field=models.ManyToManyField(blank=True, to='nbsap.Link', verbose_name='Related Links'),
        ),
        migrations.AddField(
            model_name='aichiindicator',
            name='scales',
            field=models.ManyToManyField(blank=True, to='nbsap.Scale', verbose_name='Scale (global, regional, national, sub-national)'),
        ),
        migrations.AddField(
            model_name='aichigoal',
            name='targets',
            field=models.ManyToManyField(related_name='goals', to='nbsap.AichiTarget'),
        ),
    ]
